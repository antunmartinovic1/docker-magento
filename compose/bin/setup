#!/bin/bash
set -o errexit

# shellcheck source=../env/db.env
source env/db.env
# shellcheck source=../env/elasticsearch.env
source env/elasticsearch.env
# shellcheck source=../env/magento.env
source env/magento.env
# shellcheck source=../env/rabbitmq.env
source env/rabbitmq.env

DOMAIN=${1:-vivelacar.loc}

echo "Removing and making 'src' directory"
rm -rf src && mkdir src

echo "Cloning from github ..."
bin/download

echo "Copying data from env directory ..."
bin/file-check

docker-compose -f docker-compose.yml up -d
[ $? != 0 ] && echo "Failed to start Docker services" && exit

echo "Waiting for connection to Elasticsearch..."
bin/clinotty timeout $ES_HEALTHCHECK_TIMEOUT bash -c "
    until curl --silent --output /dev/null http://$ES_HOST:$ES_PORT/_cat/health?h=st; do
        printf '.'
        sleep 2
    done"
[ $? != 0 ] && echo "Failed to connect to Elasticsearch" && exit

echo ""
echo "Waiting for connection to RabbitMQ..."
bin/clinotty timeout $RABBITMQ_HEALTHCHECK_TIMEOUT bash -c "
    until curl --silent --output /dev/null http://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@$RABBITMQ_HOST:$RABBITMQ_MANAGEMENT_PORT/api/aliveness-test/%2F; do
        printf '.'
        sleep 2
    done"
[ $? != 0 ] && echo "Failed to connect to RabbitMQ" && exit

echo 'Copy files to container ...'
bin/copytocontainer --all

echo "Importing database..."
bin/mysql < etc/localhost.sql

echo "Running composer install..."
bin/clinotty composer install

echo "Running setup upgrade..."
bin/clinotty bin/magento setup:upgrade

echo "Copy all from container to local ..."
bin/copyfromcontainer --all

echo "Copy all to container from local ..."
bin/copytocontainer --all

bin/restart

echo "Docker development environment setup complete."
echo "You may now access your Magento instance at https://${DOMAIN}/"
